package com.bsmwireless.services.malfunction;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.Binder;
import android.os.IBinder;
import android.support.annotation.Nullable;

import com.bsmwireless.common.App;

import javax.inject.Inject;

/**
 * Service for monitoring diagnostic events which is generated by a black box
 */
public final class MalfunctionMonitoringService extends Service {

    private final IBinder mBinder = new Binder();

    @Inject
    MalfunctionServicePresenter mPresenter;

    public static Intent createIntent(Context context) {
        return new Intent(context, MalfunctionMonitoringService.class);
    }

    @Override
    public void onCreate() {
        super.onCreate();
        App.getComponent().malfunctionServiceComponentBuilder()
                .build()
                .inject(this);

    }

    @Override
    public void onRebind(Intent intent) {
        super.onRebind(intent);
        mPresenter.startMonitoring();
    }

    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        mPresenter.startMonitoring();
        return mBinder;
    }

    @Override
    public boolean onUnbind(Intent intent) {
        mPresenter.stopMonitoring();
        //we want to get onRebuild call when service will be bound again
        return true;
    }
}
